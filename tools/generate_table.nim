# unicode table generator for wcwidth-nim.
# 
# USAGE
# 1. set textfile in `tools/`
# 2. run below command at project root dir
# `nim c -r tools/generate_table.nim`
#
import
  std/os,
  std/strutils

const fileName = "EastAsianWidth-12.0.0.txt"
const outPutFileName = "unicode_table.nim"
let filePath = getAppDir() & "/"

proc writeBody(fo: File, varName: string, values: seq[tuple[first, last: int, text: string]]) =
  fo.writeLine "const " & varName & "* = @["
  var prevFirst, prevLast: int = 0
  var prevFirstText, prevLastText: string = ""
  for value in values:
    if prevFirst == 0:
      prevFirst = value.first
      prevLast = value.last
      prevFirstText = value.text
      prevLastText = value.text
      continue

    if prevLast + 1 == value.first:
      prevLast = value.last
      prevLastText = value.text
    else:
      fo.writeLine "  (0x" & prevFirst.toHex(6) & ".int32, 0x" & prevLast.toHex(6) & ".int32), " & prevFirstText & ".." & prevLastText
      prevFirst = value.first
      prevLast = value.last
      prevFirstText = value.text
      prevLastText = value.text
  fo.writeLine "  (0x" & prevFirst.toHex(6) & ".int32, 0x" & prevLast.toHex(6) & ".int32), " & prevFirstText & ".." & prevLastText
  fo.writeLine "]"
  fo.writeLine ""

proc generateTable() =
  var fi : File = open(filePath & fileName, FileMode.fmRead)
  defer : close(fi)

  let firstLine = fi.readLine()

  var valuesFW: seq[tuple[first, last: int, text: string]]
  var valuesA: seq[tuple[first, last: int, text: string]]

  while fi.endOfFile == false :
    let line = fi.readLine()
    if line.startsWith("#") or line == "":
      continue
    var addrs, details: string
    (addrs, details) = line.split(';')
    if details.startsWith("F") or details.startsWith("W") or details.startsWith("A"):
      var first, last: string = addrs
      if addrs.contains(".."):
        (first, last) = addrs.split("..")
      
      let description = if details.split("#")[1].len > 35:
          "# " & $details[0] & details.split("#")[1][11..<35]
        else:
          "# " & $details[0] & details.split("#")[1].alignLeft(35)[11..<35]

      if details.startsWith("A"):
        valuesA.add((first.parseHexInt, last.parseHexInt, description))
      else:
        valuesFW.add((first.parseHexInt, last.parseHexInt, description))

  # write output file
  var fo : File = open(filePath & "../src/" & outPutFileName, FileMode.fmWrite)
  defer : close(fo)
  fo.writeLine firstLine
  fo.writeLine "# This file is auto generated by src/tools/generate_table.nim"
  writeBody(fo, "TABLE_F_W", valuesFW)
  writeBody(fo, "TABLE_A", valuesA)

generateTable()